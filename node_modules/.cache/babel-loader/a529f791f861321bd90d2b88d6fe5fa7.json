{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/banshi/Documents/techTask1/techtask-1-app/src/card_screen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport { cardActions } from \"./card/reducer\";\n\nconst CardScreen = ({\n  data,\n  error,\n  isLoading,\n  card\n}) => {\n  _s();\n\n  console.log(\"data\", data);\n  useEffect(() => {\n    card();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: data.map(item => {\n      return /*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          sm: \"4\",\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            body: true,\n            children: [/*#__PURE__*/_jsxDEV(CardTitle, {\n              tag: \"h5\",\n              children: item.userId\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 19,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(CardText, {\n              children: item.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 20,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              children: \"Go somewhere\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 21,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 18,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 11\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CardScreen, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = CardScreen;\n\nconst mapStateToProps = ({\n  card\n}) => {\n  const {\n    data,\n    error,\n    isLoading\n  } = card;\n  return {\n    data,\n    error,\n    isLoading\n  };\n};\n\nconst mapDispatchToProps = dispatch => ({ ...bindActionCreators({ ...cardActions.Creators\n  }, dispatch)\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CardScreen);\n\nvar _c;\n\n$RefreshReg$(_c, \"CardScreen\");","map":{"version":3,"sources":["/Users/banshi/Documents/techTask1/techtask-1-app/src/card_screen.js"],"names":["React","useEffect","connect","bindActionCreators","cardActions","CardScreen","data","error","isLoading","card","console","log","map","item","userId","title","mapStateToProps","mapDispatchToProps","dispatch","Creators"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,kBAAT,QAAmC,OAAnC;AACA,SAASC,WAAT,QAA4B,gBAA5B;;AAGA,MAAMC,UAAU,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA,KAAR;AAAeC,EAAAA,SAAf;AAA0BC,EAAAA;AAA1B,CAAD,KAAsC;AAAA;;AACvDC,EAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBL,IAApB;AACAL,EAAAA,SAAS,CAAC,MAAM;AACdQ,IAAAA,IAAI;AACL,GAFQ,EAEN,EAFM,CAAT;AAGA,sBACE;AAAA,cACGH,IAAI,CAACM,GAAL,CAASC,IAAI,IAAI;AAChB,0BACE,QAAC,GAAD;AAAA,+BACE,QAAC,GAAD;AAAK,UAAA,EAAE,EAAC,GAAR;AAAA,iCACE,QAAC,IAAD;AAAM,YAAA,IAAI,MAAV;AAAA,oCACE,QAAC,SAAD;AAAW,cAAA,GAAG,EAAC,IAAf;AAAA,wBAAqBA,IAAI,CAACC;AAA1B;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE,QAAC,QAAD;AAAA,wBAAWD,IAAI,CAACE;AAAhB;AAAA;AAAA;AAAA;AAAA,oBAFF,eAGE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAHF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF;AAWD,KAZA;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAiBD,CAtBD;;GAAMV,U;;KAAAA,U;;AAuBN,MAAMW,eAAe,GAAG,CAAC;AAAEP,EAAAA;AAAF,CAAD,KAAc;AACpC,QAAM;AAAEH,IAAAA,IAAF;AAAQC,IAAAA,KAAR;AAAeC,IAAAA;AAAf,MAA6BC,IAAnC;AACA,SAAO;AAAEH,IAAAA,IAAF;AAAQC,IAAAA,KAAR;AAAeC,IAAAA;AAAf,GAAP;AACD,CAHD;;AAIA,MAAMS,kBAAkB,GAAGC,QAAQ,KAAK,EACtC,GAAGf,kBAAkB,CACnB,EACE,GAAGC,WAAW,CAACe;AADjB,GADmB,EAInBD,QAJmB;AADiB,CAAL,CAAnC;;AASA,eAAehB,OAAO,CAACc,eAAD,EAAkBC,kBAAlB,CAAP,CAA6CZ,UAA7C,CAAf","sourcesContent":["import React, { useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport { cardActions } from \"./card/reducer\";\n\n\nconst CardScreen = ({ data, error, isLoading, card }) => {\n  console.log(\"data\", data);\n  useEffect(() => {\n    card();\n  }, []);\n  return (\n    <div>\n      {data.map(item => {\n        return (\n          <Row>\n            <Col sm=\"4\">\n              <Card body>\n                <CardTitle tag=\"h5\">{item.userId}</CardTitle>\n                <CardText>{item.title}</CardText>\n                <Button>Go somewhere</Button>\n              </Card>\n            </Col>\n          </Row>\n        );\n      })}\n    </div>\n  );\n};\nconst mapStateToProps = ({ card }) => {\n  const { data, error, isLoading } = card;\n  return { data, error, isLoading };\n};\nconst mapDispatchToProps = dispatch => ({\n  ...bindActionCreators(\n    {\n      ...cardActions.Creators\n    },\n    dispatch\n  )\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CardScreen);\n"]},"metadata":{},"sourceType":"module"}