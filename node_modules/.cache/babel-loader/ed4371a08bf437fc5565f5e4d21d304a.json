{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/banshi/Documents/techTask1/techtask-1-app/src/comment_screen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport { commentActions } from \"./comment/reducer\";\nimport Comments from \"./components/comments/Comments\";\n\nconst CommentScreen = ({\n  data,\n  comments\n}) => {\n  _s();\n\n  console.log(\"data\", data);\n  useEffect(() => {\n    comments();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mainDivPost\",\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"Comments\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this), data.map(item => {\n      return /*#__PURE__*/_jsxDEV(Comments, {\n        commentAuthorName: item.name,\n        commentEmail: item.email,\n        commentBody: item.body\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 11\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CommentScreen, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = CommentScreen;\n\nconst mapStateToProps = ({\n  comments\n}) => {\n  const {\n    data,\n    error,\n    isLoading\n  } = comments;\n  return {\n    data,\n    error,\n    isLoading\n  };\n};\n\nconst mapDispatchToProps = dispatch => ({ ...bindActionCreators({ ...commentActions.Creators\n  }, dispatch)\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CommentScreen);\n\nvar _c;\n\n$RefreshReg$(_c, \"CommentScreen\");","map":{"version":3,"sources":["/Users/banshi/Documents/techTask1/techtask-1-app/src/comment_screen.js"],"names":["React","useEffect","connect","bindActionCreators","commentActions","Comments","CommentScreen","data","comments","console","log","map","item","name","email","body","mapStateToProps","error","isLoading","mapDispatchToProps","dispatch","Creators"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,kBAAT,QAAmC,OAAnC;AACA,SAASC,cAAT,QAA+B,mBAA/B;AACA,OAAOC,QAAP,MAAqB,gCAArB;;AAEA,MAAMC,aAAa,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA;AAAR,CAAD,KAAwB;AAAA;;AAC5CC,EAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBH,IAApB;AACAN,EAAAA,SAAS,CAAC,MAAM;AACdO,IAAAA,QAAQ;AACT,GAFQ,EAEN,EAFM,CAAT;AAGA,sBACE;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAEGD,IAAI,CAACI,GAAL,CAASC,IAAI,IAAI;AAChB,0BACE,QAAC,QAAD;AACA,QAAA,iBAAiB,EAAEA,IAAI,CAACC,IADxB;AAEA,QAAA,YAAY,EAAED,IAAI,CAACE,KAFnB;AAGA,QAAA,WAAW,EAAEF,IAAI,CAACG;AAHlB;AAAA;AAAA;AAAA;AAAA,cADF;AAOD,KARA,CAFH;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAcD,CAnBD;;GAAMT,a;;KAAAA,a;;AAoBN,MAAMU,eAAe,GAAG,CAAC;AAAER,EAAAA;AAAF,CAAD,KAAkB;AACxC,QAAM;AAAED,IAAAA,IAAF;AAAQU,IAAAA,KAAR;AAAeC,IAAAA;AAAf,MAA6BV,QAAnC;AACA,SAAO;AAAED,IAAAA,IAAF;AAAQU,IAAAA,KAAR;AAAeC,IAAAA;AAAf,GAAP;AACD,CAHD;;AAIA,MAAMC,kBAAkB,GAAGC,QAAQ,KAAK,EACtC,GAAGjB,kBAAkB,CACnB,EACE,GAAGC,cAAc,CAACiB;AADpB,GADmB,EAInBD,QAJmB;AADiB,CAAL,CAAnC;;AASA,eAAelB,OAAO,CAACc,eAAD,EAAkBG,kBAAlB,CAAP,CAA6Cb,aAA7C,CAAf","sourcesContent":["import React, { useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport { commentActions } from \"./comment/reducer\";\nimport Comments from \"./components/comments/Comments\";\n\nconst CommentScreen = ({ data, comments }) => {\n  console.log(\"data\", data);\n  useEffect(() => {\n    comments();\n  }, []);\n  return (\n    <div className=\"mainDivPost\">\n      <h4>Comments</h4>\n      {data.map(item => {\n        return (\n          <Comments\n          commentAuthorName={item.name}\n          commentEmail={item.email}\n          commentBody={item.body}\n          />\n        );\n      })}\n    </div>\n  );\n};\nconst mapStateToProps = ({ comments }) => {\n  const { data, error, isLoading } = comments;\n  return { data, error, isLoading };\n};\nconst mapDispatchToProps = dispatch => ({\n  ...bindActionCreators(\n    {\n      ...commentActions.Creators\n    },\n    dispatch\n  )\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CommentScreen);\n"]},"metadata":{},"sourceType":"module"}