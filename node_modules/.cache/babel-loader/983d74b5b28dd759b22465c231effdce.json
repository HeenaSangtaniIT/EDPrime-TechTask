{"ast":null,"code":"import { createStore, applyMiddleware, compose } from \"redux\";\nimport { persistStore, persistReducer } from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\";\nimport createSagaMiddleware from \"redux-saga\";\nimport reducers from \"./reducers\";\nimport sagas from \"./sagas\";\nconsole.log(\"In store\");\nconst persistConfig = {\n  key: \"root\",\n  storage\n};\nconst persistedReducer = persistReducer(persistConfig, reducers);\nconst sagaMiddleware = createSagaMiddleware();\nconst middlewares = [sagaMiddleware];\nexport function configureStore(initialState) {\n  const store = createStore(persistedReducer, initialState, compose(applyMiddleware(...middlewares)));\n  let persistor = persistStore(store);\n  sagaMiddleware.run(sagas);\n  return {\n    store,\n    persistor\n  };\n}","map":{"version":3,"sources":["/Users/banshi/Documents/techTask1/techtask-1-app/src/store.js"],"names":["createStore","applyMiddleware","compose","persistStore","persistReducer","storage","createSagaMiddleware","reducers","sagas","console","log","persistConfig","key","persistedReducer","sagaMiddleware","middlewares","configureStore","initialState","store","persistor","run"],"mappings":"AAAA,SAASA,WAAT,EAAqBC,eAArB,EAAqCC,OAArC,QAAmD,OAAnD;AACA,SAASC,YAAT,EAAsBC,cAAtB,QAA4C,eAA5C;AACA,OAAOC,OAAP,MAAoB,2BAApB;AACA,OAAOC,oBAAP,MAAiC,YAAjC;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACAC,OAAO,CAACC,GAAR,CAAY,UAAZ;AACA,MAAMC,aAAa,GAAG;AAClBC,EAAAA,GAAG,EAAE,MADa;AAElBP,EAAAA;AAFkB,CAAtB;AAIA,MAAMQ,gBAAgB,GAAGT,cAAc,CAACO,aAAD,EAAeJ,QAAf,CAAvC;AACA,MAAMO,cAAc,GAAGR,oBAAoB,EAA3C;AACA,MAAMS,WAAW,GAAG,CAACD,cAAD,CAApB;AACA,OAAO,SAASE,cAAT,CAAwBC,YAAxB,EAAqC;AACxC,QAAMC,KAAK,GAAGlB,WAAW,CAACa,gBAAD,EAAkBI,YAAlB,EAA+Bf,OAAO,CAACD,eAAe,CAAC,GAAGc,WAAJ,CAAhB,CAAtC,CAAzB;AACA,MAAII,SAAS,GAAGhB,YAAY,CAACe,KAAD,CAA5B;AACAJ,EAAAA,cAAc,CAACM,GAAf,CAAmBZ,KAAnB;AACA,SAAM;AAACU,IAAAA,KAAD;AAAQC,IAAAA;AAAR,GAAN;AACH","sourcesContent":["import { createStore,applyMiddleware,compose} from \"redux\";\nimport { persistStore,persistReducer } from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\";\nimport createSagaMiddleware from \"redux-saga\";\nimport reducers from \"./reducers\";\nimport sagas from \"./sagas\";\nconsole.log(\"In store\");\nconst persistConfig = {\n    key: \"root\",\n    storage,\n}\nconst persistedReducer = persistReducer(persistConfig,reducers)\nconst sagaMiddleware = createSagaMiddleware();\nconst middlewares = [sagaMiddleware]\nexport function configureStore(initialState){\n    const store = createStore(persistedReducer,initialState,compose(applyMiddleware(...middlewares)))\n    let persistor = persistStore(store);\n    sagaMiddleware.run(sagas);\n    return{store, persistor};\n}"]},"metadata":{},"sourceType":"module"}