{"ast":null,"code":"import { put, call } from \"redux-saga/effects\";\nimport { cardActions, authorActions } from \"./reducer\";\nimport { getCardApi, getCommentsApi, getAuthorsApi } from \"../apisause\";\nexport function* getCardSaga() {\n  try {\n    let response;\n    response = yield call(getCardApi);\n\n    if (!response.error) {\n      yield put(cardActions.Creators.cardSuccess(response.data));\n    } else {\n      yield put(cardActions.Creators.cardFailure(response.error));\n    }\n  } catch (error) {\n    yield put(cardActions.Creators.cardFailure(error));\n  }\n}\nexport function* getCommentsSaga() {\n  try {\n    let response;\n    response = yield call(getCommentsApi);\n\n    if (!response.error) {\n      yield put(cardActions.Creators.commentsSuccess(response.commentdata));\n    } else {\n      yield put(cardActions.Creators.commentsFailure(response.error));\n    }\n  } catch (error) {\n    yield put(cardActions.Creators.commentsFailure(error));\n  }\n}\nexport function* getAuthorsSaga() {\n  try {\n    let response;\n    response = yield call(getAuthorsApi);\n\n    if (!response.error) {\n      yield put(authorActions.Creators.authorsSuccess(response.authordata));\n    } else {\n      yield put(authorActions.Creators.authorsFailure(response.error));\n    }\n  } catch (error) {\n    yield put(authorActions.Creators.authorsFailure(error));\n  }\n}","map":{"version":3,"sources":["/Users/banshi/Documents/techTask1/techtask-1-app/src/card/saga.js"],"names":["put","call","cardActions","authorActions","getCardApi","getCommentsApi","getAuthorsApi","getCardSaga","response","error","Creators","cardSuccess","data","cardFailure","getCommentsSaga","commentsSuccess","commentdata","commentsFailure","getAuthorsSaga","authorsSuccess","authordata","authorsFailure"],"mappings":"AAAA,SAASA,GAAT,EAAcC,IAAd,QAA0B,oBAA1B;AACA,SAASC,WAAT,EAAsBC,aAAtB,QAA2C,WAA3C;AACA,SAASC,UAAT,EAAqBC,cAArB,EAAqCC,aAArC,QAA0D,aAA1D;AAEA,OAAO,UAAUC,WAAV,GAAwB;AAC3B,MAAI;AACA,QAAIC,QAAJ;AACAA,IAAAA,QAAQ,GAAG,MAAMP,IAAI,CAACG,UAAD,CAArB;;AACA,QAAI,CAACI,QAAQ,CAACC,KAAd,EAAqB;AACjB,YAAMT,GAAG,CAACE,WAAW,CAACQ,QAAZ,CAAqBC,WAArB,CAAiCH,QAAQ,CAACI,IAA1C,CAAD,CAAT;AACH,KAFD,MAEO;AACH,YAAMZ,GAAG,CAACE,WAAW,CAACQ,QAAZ,CAAqBG,WAArB,CAAiCL,QAAQ,CAACC,KAA1C,CAAD,CAAT;AACH;AACJ,GARD,CAQE,OAAOA,KAAP,EAAc;AACZ,UAAMT,GAAG,CAACE,WAAW,CAACQ,QAAZ,CAAqBG,WAArB,CAAiCJ,KAAjC,CAAD,CAAT;AACH;AACJ;AACD,OAAO,UAAUK,eAAV,GAA4B;AAC/B,MAAI;AACA,QAAIN,QAAJ;AACAA,IAAAA,QAAQ,GAAG,MAAMP,IAAI,CAACI,cAAD,CAArB;;AACA,QAAI,CAACG,QAAQ,CAACC,KAAd,EAAqB;AACjB,YAAMT,GAAG,CAACE,WAAW,CAACQ,QAAZ,CAAqBK,eAArB,CAAqCP,QAAQ,CAACQ,WAA9C,CAAD,CAAT;AACH,KAFD,MAEO;AACH,YAAMhB,GAAG,CAACE,WAAW,CAACQ,QAAZ,CAAqBO,eAArB,CAAqCT,QAAQ,CAACC,KAA9C,CAAD,CAAT;AACH;AACJ,GARD,CAQE,OAAOA,KAAP,EAAc;AACZ,UAAMT,GAAG,CAACE,WAAW,CAACQ,QAAZ,CAAqBO,eAArB,CAAqCR,KAArC,CAAD,CAAT;AACH;AACJ;AACD,OAAO,UAAUS,cAAV,GAA2B;AAC9B,MAAI;AACA,QAAIV,QAAJ;AACAA,IAAAA,QAAQ,GAAG,MAAMP,IAAI,CAACK,aAAD,CAArB;;AACA,QAAI,CAACE,QAAQ,CAACC,KAAd,EAAqB;AACjB,YAAMT,GAAG,CAACG,aAAa,CAACO,QAAd,CAAuBS,cAAvB,CAAsCX,QAAQ,CAACY,UAA/C,CAAD,CAAT;AACH,KAFD,MAEO;AACH,YAAMpB,GAAG,CAACG,aAAa,CAACO,QAAd,CAAuBW,cAAvB,CAAsCb,QAAQ,CAACC,KAA/C,CAAD,CAAT;AACH;AACJ,GARD,CAQE,OAAOA,KAAP,EAAc;AACZ,UAAMT,GAAG,CAACG,aAAa,CAACO,QAAd,CAAuBW,cAAvB,CAAsCZ,KAAtC,CAAD,CAAT;AACH;AACJ","sourcesContent":["import { put, call } from \"redux-saga/effects\";\nimport { cardActions, authorActions } from \"./reducer\";\nimport { getCardApi, getCommentsApi, getAuthorsApi } from \"../apisause\";\n\nexport function* getCardSaga() {\n    try {\n        let response;\n        response = yield call(getCardApi)\n        if (!response.error) {\n            yield put(cardActions.Creators.cardSuccess(response.data))\n        } else {\n            yield put(cardActions.Creators.cardFailure(response.error))\n        }\n    } catch (error) {\n        yield put(cardActions.Creators.cardFailure(error))\n    }\n}\nexport function* getCommentsSaga() {\n    try {\n        let response;\n        response = yield call(getCommentsApi)\n        if (!response.error) {\n            yield put(cardActions.Creators.commentsSuccess(response.commentdata))\n        } else {\n            yield put(cardActions.Creators.commentsFailure(response.error))\n        }\n    } catch (error) {\n        yield put(cardActions.Creators.commentsFailure(error))\n    }\n}\nexport function* getAuthorsSaga() {\n    try {\n        let response;\n        response = yield call(getAuthorsApi)\n        if (!response.error) {\n            yield put(authorActions.Creators.authorsSuccess(response.authordata))\n        } else {\n            yield put(authorActions.Creators.authorsFailure(response.error))\n        }\n    } catch (error) {\n        yield put(authorActions.Creators.authorsFailure(error))\n    }\n}"]},"metadata":{},"sourceType":"module"}